@using System.Reflection
<Router AppAssembly="typeof(Program).Assembly" AdditionalAssemblies="@additionalAssemblies">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="routeData" DefaultLayout="typeof(AppLaunch.Themes.Layout.AppLaunchDefault)">
            <NotAuthorized>
                <RedirectToLogin />
            </NotAuthorized>
        </AuthorizeRouteView>
        @* <FocusOnNavigate RouteData="routeData" Selector="h1" /> *@
    </Found>
</Router>
@code {
    private List<Assembly> additionalAssemblies = new();

    protected override async Task OnInitializedAsync()
    {
        //add admin as an assembly        
        additionalAssemblies.Add(typeof(AppLaunch.Admin._Imports).Assembly);
        
        var pluginsDir = Path.Combine(Environment.CurrentDirectory, "Plugins");

        foreach (var pluginDir in Directory.GetDirectories(pluginsDir))
        {
            var libDir = Path.Combine(pluginDir, "lib", "net9.0"); // Or your target framework
            if (!Directory.Exists(libDir))
                continue;

            foreach (var dllFile in Directory.GetFiles(libDir, "*.dll"))
            {
                var context = new PluginLoadContext(dllFile);
                var assembly = context.LoadFromAssemblyPath(dllFile);
                additionalAssemblies.Add(assembly);
            }
        }

        var bob = 1;
    }
}


@* AdditionalAssemblies="new[] { typeof(AppLaunch.Admin._Imports).Assembly, typeof(AppLaunch.Admin.Account.Pages.Login).Assembly, typeof(AppLaunch.Core.Components._Imports).Assembly,typeof(AppLaunch.Themes._Imports).Assembly }"> *@