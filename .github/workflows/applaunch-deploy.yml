name: Build and Deploy NuGet Packages

on:
  push:
    branches:
      - main
    paths:
      - 'AppLaunch.Services/**'
      - 'AppLaunch.Admin/**'
      - 'AppLaunch.Models/**'
      - 'AppLaunch.Themes/**'

  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Install XML tools
        run: sudo apt-get install -y xmlstarlet

      - name: Increment patch version and update .csproj
        run: |
          for project in AppLaunch.Services AppLaunch.Admin AppLaunch.Models AppLaunch.Themes
          do
            CSPROJ="$project/$project.csproj"
            CURRENT_VERSION=$(xmlstarlet sel -N msbuild="http://schemas.microsoft.com/developer/msbuild/2003" -t -v "//msbuild:Version" $CSPROJ)
            if [ -z "$CURRENT_VERSION" ]; then
              CURRENT_VERSION=$(xmlstarlet sel -t -v "//Version" $CSPROJ)
            fi
            echo "Current version of $project is $CURRENT_VERSION"

            IFS='.' read -ra PARTS <<< "$CURRENT_VERSION"
            PATCH=$((PARTS[2]+1))
            NEW_VERSION="${PARTS[0]}.${PARTS[1]}.$PATCH"

            echo "Updating $project to version $NEW_VERSION"
            xmlstarlet ed --inplace -u "//Version" -v "$NEW_VERSION" $CSPROJ
          done

      - name: Restore dependencies
        run: dotnet restore

      - name: Build, Pack, and Push
        run: |
          for project in AppLaunch.Services AppLaunch.Admin AppLaunch.Models AppLaunch.Themes
          do
            dotnet build $project/$project.csproj -c Release
            dotnet pack $project/$project.csproj -c Release -o ./nupkgs
          done

          dotnet nuget push ./nupkgs/*.nupkg -k $NUGET_API_KEY -s https://api.nuget.org/v3/index.json --skip-duplicate
